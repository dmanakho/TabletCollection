@model IEnumerable<TabletCollection.ViewModels.CollectionViewModel>

@{
    ViewBag.Title = "Collections";
}

<div class="row well">
    <div class="offset-1 col-1">
        <h2 class="text-primary">Collected Tablets</h2>
    </div>
    <div class="col-8">
        @Html.ActionLink("Collect", "Create", "Collections", null, new { @class = "btn btn-primary btn-sm" })
    </div>
</div>
<table id="indexTable" class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(m => m.StudentFullName)
            </th>
            <th>
                @Html.DisplayNameFor(m => m.TabletTabletName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsStylus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsAC)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsNegligence)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ChargeNotes)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comments)
            </th>
            <th>
                @Html.DisplayNameFor(m => m.CreatedOn)
            </th>
            <th>
                @Html.DisplayNameFor(m => m.CreatedBy)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.StudentFullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TabletTabletName)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.IsStylus)*@
                @(item.IsStylus ? "Yes" : "No")
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.IsAC)*@
                @(item.IsAC ? "Yes" : "No")
            </td>
            <td>
               @(item.IsNegligence ? "Yes" : "No")
                @*@Html.DisplayFor(modelItem => item.IsNegligence)*@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ChargeNotes)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comments)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedOn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GetCreatedByUserName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-default btn-xs" })
                @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-default btn-xs" })
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger btn-xs" })




            </td>
        </tr>
        }
    </tbody>
</table>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $("#indexTable").DataTable(
                {
                    // "dom": 'lfBpt<pi>',
                    "dom":
                        "<'row'<'col-sm-3 text-warning'l><'col-sm-3 text-primary'f><'col-sm-6'p>>" +
                        "<'row'<'col-sm-12'tr>>" +
                        "<'row'<'col-sm-4 text-info'i><'col-sm-3 text-center'B><'col-sm-5'p>>",
                    buttons: [
                        'copy',
                        'excel',
                        'pdf'
                    ],
                    "columnDefs": [
                        {
                            "orderable": false, "targets": 9
                        },
                        {
                            "targets": [2,3,4,5,6],
                            "visible": false,
                            "searchable": false
                        },

   
                    ],
                    "pagingType": "first_last_numbers",

                }
            );
        });
    </script>
}
