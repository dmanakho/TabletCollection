@model TabletCollection.ViewModels.CollectionViewModel

@{
    ViewBag.Title = "Collection";
}

<div class="row well">
    <div class="offset-1 col-1">
        <h2 class="text-primary">
            <span class="glyphicon glyphicon-user"></span>
            - @Model.StudentFullName
        </h2>
    </div>
    <div class="col-8 text-muted">
        <p>
            collected by: @Model.GetCreatedByUserName collected on: @Model.CreatedOn |
            updated by: @Model.GetUpdatedByUserName updated on: @Model.UpdatedOn
        </p>
    </div>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.TabletTabletName)
    @Html.HiddenFor(m => m.StudentFullName)
    @Html.HiddenFor(m => m.StudentID)
    @Html.HiddenFor(m => m.RowVersion)
    @Html.HiddenFor(m => m.CreatedBy)
    @Html.HiddenFor(m => m.CreatedOn)
    @Html.HiddenFor(m => m.UpdatedBy)
    @Html.HiddenFor(m => m.UpdatedOn)

    <div class="form-group">
        @Html.LabelFor(model => model.TabletID, "TabletID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("TabletID", null, htmlAttributes: new { @class = "form-control", id = "select2" })
            @Html.ValidationMessageFor(model => model.TabletID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsStylus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsStylus)
                @Html.ValidationMessageFor(model => model.IsStylus, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsAC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsAC)
                @Html.ValidationMessageFor(model => model.IsAC, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsNegligence, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsNegligence)
                @Html.ValidationMessageFor(model => model.IsNegligence, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ChargeNotes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ChargeNotes, new { htmlAttributes = new { @class = "form-control commentsinput" } })
            @Html.ValidationMessageFor(model => model.ChargeNotes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control commentsinput" } })
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="well well-sm form-group">
        <div class="col-md-offset-2 col-md-10">
            <span class="icon-input-btn">
                <span class="glyphicon glyphicon-floppy-save"></span>
                <input type="submit" value="Save" class="btn btn-primary" />
            </span>
            <span class="icon-input-btn">
                <span class="glyphicon glyphicon-step-backward"></span>
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
            </span>
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $('#select2').select2();
        });
    </script>
}
