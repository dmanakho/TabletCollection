@model IEnumerable<TabletCollection.ViewModels.TabletViewModel>

@{
    ViewBag.Title = "Index";
}

<div class="row well">
    <div class="row">
        <div class="offset-1 col-1">
            <h2 class="text-primary">Tablets</h2>
        </div>
    </div>
    <div class="row">
        <div class="col-1 pull-left">
            <span class="icon-input-btn">
                <span class="glyphicon glyphicon-file"></span>
                @Html.ActionLink("Create New", "Create", "Tablets", null, new { @class = "btn btn-primary btn-sm" })
            </span>
        </div>
        @using (@Html.BeginForm(null, null, FormMethod.Get))
        {
            <div class="form-horizontal col-6 col-md-offset-6 pull-left">
                @Html.Label("filter", "Toggle to show All or Still to be Collected Tablets:", new { @class = "label label-default" })
                @Html.CheckBox("filter", false, new { data_toggle = "toggle", id = "filter", data_off = "All", data_on = "Not Collected", data_onstyle = "success", data_offstyle = "info", onchange = "this.form.submit()" })
            </div>
        }
    </div>
</div>

<table id="indexTable" class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TabletName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SerialNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AssetTag)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsPurchased)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsExtraPurchase)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsPickedUp)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsVendorBuyout)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Notes)
            </th>
            @if (!(bool)ViewBag.Filter)
            {
                <th>
                    @Html.DisplayNameFor(m => m.IsTabletCollected)
                </th>
            }

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TabletName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SerialNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AssetTag)
                </td>
                <td>
                    @(item.IsPurchased ? "Yes" : "No")
                </td>
                <td>
                    @(item.IsExtraPurchase ? "Yes" : "No")
                </td>
                <td>
                    @(item.IsPickedUp ? "Yes" : "No")
                </td>
                <td>
                    @(item.IsVendorBuyout ? "Yes" : "No")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Notes)
                </td>
                @if (!(bool)ViewBag.Filter)
                {
                    <td>
                        @if (item.IsTabletCollected)
                        {
                            @Html.ActionLink("Yes", "Details", "Collections", new { id = item.CollectionID }, new { target = "_blank" })
                        }
                        else
                        {
                            @:No
    }
                    </td>
                }

                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }, new { @class = "btn btn-default btn-xs" })
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID }, new { @class = "btn btn-warning btn-xs" })
                </td>
            </tr>
        }
    </tbody>
</table>

@section scripts
{

    <script>
        // ViewBag.ExtraColumn
        var table;
        $(document).ready(function () {
            table = $("#indexTable").DataTable(
                {
                    // "dom": 'lfBpt<pi>',
                    "dom":
                        "<'row'<'col-sm-3 text-warning'l><'col-sm-3 text-primary'f><'col-sm-6'p>>" +
                        "<'row'<'col-sm-12'tr>>" +
                        "<'row'<'col-sm-4 text-info'i><'col-sm-3 text-center'B><'col-sm-5'p>>",
                    buttons: [
                        'copy',
                        'excel',
                        'pdf'
                    ],
                    "columnDefs": [
                        { "orderable": false, "targets": @ViewBag.ExtraColumn  },
                        {
                            "targets": [2, 7],
                            "visible": false,
                            "searchable": false
                        },
                    ],
                    "pagingType": "first_last_numbers",

                }
            );
        });
        console.log(table.columns()[0].length);
    </script>

}
