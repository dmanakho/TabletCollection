@model TabletCollection.Models.Student

@{
    ViewBag.Title = $"Edit {Model.FullName}";
}

<div class="row well">
    <div class="offset-1 col-1">
        <h2 class="text-primary">
        <span class="glyphicon glyphicon-user"></span>
        - @Model.FullName</h2>
    </div>
    <div class="col-8">
        @* Student model doesn't implement Auditable yet
                <p>created by: @Model.CreatedBy created on: @Model.CreatedOn</p>
            <p>updated by:@Model.UpdatedBy updated on: @Model.UpdatedOn</p>*@
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.ImportID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImportID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImportID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NickName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ForeignExchangeBound, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ForeignExchangeBound, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ForeignExchangeBound, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClassOf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClassOf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClassOf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="well well-sm form-group">
            <div class="col-md-offset-2 col-md-10">
                <span class="icon-input-btn">
                    <span class="glyphicon glyphicon-floppy-save"></span>
                    <input type="submit" value="Save" class="btn btn-primary" />
                </span>
                <span class="icon-input-btn">
                    <span class="glyphicon glyphicon-step-backward"></span>
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                </span>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
